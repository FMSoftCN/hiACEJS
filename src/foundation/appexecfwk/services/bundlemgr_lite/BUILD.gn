# Copyright (c) 2020 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/lite/config/component/lite_component.gni")

config("bundle_config") {
    defines = [
        "OHOS_APPEXECFWK_BMS_BUNDLEMANAGER",
    ]
    cflags_cc = [ "-std=c++14" ]
}

shared_library("bundlems") {
    configs -= [ "//build/lite/config:language_cpp" ]
    configs += [
        ":bundle_config"
    ]

    cflags = [
        "-Wall",
        "-Wno-format",
        "-Wno-format-extra-args",
    ]
    cflags_cc = cflags

    sources = [
        "src/bundle_inner_feature.cpp",
        "src/bundle_ms_feature.cpp",
        "src/bundle_ms_host.cpp",
        "src/bundle_manager_service.cpp",
        "src/bundle_map.cpp",
        "src/bundle_info_creator.cpp",
        "src/bundle_installer.cpp",
        "src/bundle_parser.cpp",
        "src/bundle_res_transform.cpp",
        "src/bundle_util.cpp",
        "src/bundle_extractor.cpp",
        "src/extractor_util.cpp",
        "src/zip_file.cpp",
        "src/bundle_daemon_client.cpp",
    ]
    include_dirs = [
        "//base/global/interfaces/innerkits/resmgr_lite",
        "//foundation/aafwk/services/abilitymgr_lite/include",
        "//foundation/aafwk/interfaces/innerkits/abilitymgr_lite",
        "//foundation/aafwk/interfaces/kits/ability_lite",
        "//foundation/aafwk/interfaces/kits/want_lite",
        "//foundation/aafwk/frameworks/want_lite/include",
        "//foundation/appexecfwk/interfaces/innerkits/bundlemgr_lite",
        "//foundation/appexecfwk/frameworks/bundle_lite/include",
        "//foundation/appexecfwk/interfaces/kits/bundle_lite",
        "//foundation/appexecfwk/utils/bundle_lite",
        "//foundation/distributedschedule/interfaces/kits/samgr_lite/registry",
        "//foundation/distributedschedule/interfaces/kits/samgr_lite/samgr",
        "//kernel/liteos_a/kernel/include",
        "//kernel/liteos_a/kernel/common",
        "//third_party/cJSON",
        "//third_party/zlib",
        "//third_party/zlib/contrib/minizip",
        "//base/security/interfaces/kits/iam_lite",
        "//base/security/services/iam_lite/pms/include",
        "//third_party/bounds_checking_function/include",
        "//utils/native/lite/include",
        "//utils/native/lite/memory",
        "include",
    ]

    public_deps = [
        "//foundation/appexecfwk/frameworks/bundle_lite:bundle",
        "//foundation/distributedschedule/services/samgr_lite/samgr:samgr",
        "//base/hiviewdfx/frameworks/hilog_lite/featured:hilog_shared",
        "//base/global/frameworks/resmgr_lite:global_resmgr",
        "//third_party/cJSON:cjson_shared",
        "//third_party/zlib:zlib_shared",
    ]

    if (ohos_kernel_type != "linux") {
        sources += [
            "src/hap_sign_verify.cpp",
        ]
        include_dirs += [
            "//base/security/interfaces/innerkits/app_verify",
        ]
        public_deps += [
            "//base/security/frameworks/app_verify:verify",
        ]
    }
}

generate_notice_file("appexecfwk_services_lite_notice_file") {
    module_name = "appexecfwk_services_lite"
    module_source_dir_list = [
        "//third_party/cJSON",
        "//third_party/zlib",
        "//third_party/bounds_checking_function",
    ]
}

lite_component("appexecfwk_services_lite") {
    features = [
        ":bundlems",
        "tools:bm",
        "bundle_daemon:bundle_daemon",
    ]
}
